Вот эффективный промт, который ты можешь использовать:

---

**Промт:**

Я разрабатываю дипломный проект — **кроссплатформенное приложение для тренировки скорочтения** на C#, с использованием **.NET MAUI**. В рамках проекта я реализую **десктопную версию** приложения (Windows/macOS), которую в будущем планирую расширить до мобильных платформ (iOS и Android).

Мой преподаватель акцентировал внимание на следующих аспектах:

* Продуманная **структура приложения** и **основные сценарии использования**;
* Четко описанная **методика тренировок скорочтения** и **механизм оценки прогресса** пользователя;
* Наличие **возможностей для расширения функциональности**: выбор типов текста, уровни сложности, ведение статистики и т. д.;
* **Гибкая архитектура**, ориентированная на **повторное использование компонентов** и **масштабируемость**.

**Что мне нужно от тебя:**

1. **Сформулируй техническое задание (ТЗ)** на разработку данного приложения.
2. **Опиши функциональные требования** к приложению, включая:

   * Пользовательские сценарии;
   * Требования к интерфейсу;
   * Взаимодействие с пользователем;
   * Механизмы сбора и отображения статистики;
   * Возможность масштабирования и добавления новых модулей.

Пиши максимально структурированно, как для документации или официального проекта.

_________________________________________

**Техническое задание (ТЗ)** для разработки кроссплатформенного приложения для тренировки скорочтения на C# с использованием **.NET MAUI**

**1. Введение**

1.1 **Цель проекта**
Разработать кроссплатформенное приложение для тренировки скорочтения на C#, использующее **.NET MAUI** для создания десктопной версии (Windows/macOS). В дальнейшем приложение будет расширено для мобильных платформ (iOS и Android).

1.2 **Основные требования**
Приложение должно обеспечивать тренировку скорочтения с возможностью измерения и отслеживания прогресса пользователя. Включает в себя функциональность для выбора текстов, настройки сложности, ведения статистики и оценки прогресса.

**2. Структура приложения и основные сценарии использования**

2.1 **Сценарии использования**

* **Регистрация и авторизация пользователя**: возможность создания и авторизации пользователя через систему аккаунтов (локальная авторизация).
* **Выбор тренировки**: пользователь может выбрать тренировку, основанную на текстах с разным уровнем сложности (простые, средние, сложные).
* **Тренировка скорочтения**: взаимодействие с текстом, отображение текста в режиме тренировки.
* **Оценка прогресса**: отображение статистики и результатов по завершении тренировки.
* **Настройки**: возможность изменения уровня сложности, выбора текста, времени на чтение, конфигурации статистики.

2.2 **Функции расширения**

* **Добавление новых типов текста**.
* **Возможности интеграции с мобильными версиями** (iOS, Android).
* **Масштабируемая структура данных для добавления новых тренажеров и уровней сложности**.

**3. Методика тренировок скорочтения и оценка прогресса**

3.1 **Методика тренировок**
Приложение должно предложить разнообразные тренировки:

* Чтение текста с различными параметрами (скорость, количество текста).
* Время на чтение и количество ошибок — для тренировки скорости и точности восприятия.

3.2 **Оценка прогресса**

* **Отслеживание скорости**: время, затраченное на чтение.
* **Ошибки при восприятии**: количество ошибок, сделанных пользователем в процессе тренировки.
* **История прогресса**: пользователь должен видеть свои результаты в виде графиков или таблиц, отображающих динамику.

**4. Требования к функциональности**

4.1 **Пользовательские сценарии**

* Учет пользователя и его тренировок.
* Поддержка различных уровней сложности тренировок.
* Отображение статистики по результатам.

4.2 **Требования к интерфейсу**

* Интуитивно понятный интерфейс для пользователей с разным уровнем подготовки.
* Простота в навигации по приложению, с четким разделением на этапы (например, выбор тренировки, сама тренировка, результаты).
* Минимум шагов для доступа к каждому функционалу.

4.3 **Взаимодействие с пользователем**

* Приложение должно предоставлять четкие визуальные и звуковые подсказки в процессе тренировки.
* Возможность паузы и возобновления тренировки.
* Уведомления о завершении тренировки с показом результатов.

4.4 **Механизмы сбора и отображения статистики**

* Сбор данных о времени, затраченном на чтение, и количестве ошибок.
* Отображение прогресса пользователя на графиках (по дням, неделям, месяцам).
* Возможность экспорта статистики (например, в PDF или CSV) для анализа.

4.5 **Возможность масштабирования и добавления новых модулей**

* Архитектура приложения должна поддерживать добавление новых тренажеров, уровней сложности и типов текста.
* Поддержка интеграции с мобильными версиями в будущем.
* Возможность подключать дополнительные модули для улучшения функционала (например, тренировки для различных возрастных групп).

**5. Архитектура приложения**

5.1 **Принципы разработки**

* **Повторное использование компонентов**: создание модульных компонентов, которые могут быть повторно использованы в различных частях приложения.
* **Масштабируемость**: поддержка добавления новых функций без значительных изменений в существующем коде.
* **Кроссплатформенность**: использование **.NET MAUI** для обеспечения поддержки всех целевых платформ.

5.2 **Технологии**

* Язык программирования: **C#**
* Кроссплатформенная среда: **.NET MAUI**
* База данных: для хранения результатов тренировок и пользовательских данных можно использовать **SQLite** или аналогичную локальную базу данных.

**6. Ожидаемые результаты**

6.1 **Основной функционал**

* Полностью рабочая версия десктопного приложения, готовая к тестированию и дальнейшему расширению для мобильных устройств.
* Механизм тренировки скорочтения с возможностью измерения прогресса и статистики.

6.2 **Долгосрочные цели**

* Расширение функционала приложения для мобильных устройств (iOS, Android).
* Оптимизация алгоритмов тренировки для различных уровней сложности.

---

**Функциональные требования к приложению**:

1. **Пользовательские сценарии**:

   * Регистрация и авторизация пользователей. 
   * Выбор и настройка тренировки (сложность, текст).
   * Выполнение тренировки с последующим отображением результатов.
   * Просмотр статистики по всем выполненным тренировкам.

2. **Интерфейс**:

   * Экран входа/регистрации.
   * Экран выбора тренировки.
   * Экран с текстом для тренировки.
   * Экран с результатами тренировки и статистикой.

3. **Взаимодействие с пользователем**:

   * Интуитивно понятный пользовательский интерфейс.
   * Возможность настройки уровней сложности.
   * Отображение прогресса и статистики наглядно и в реальном времени.

4. **Сбор и отображение статистики**:

   * Сохранение результатов тренировки.
   * Показ динамики улучшений по времени и количеству ошибок.
   * Экспорт статистики.

5. **Масштабируемость**:

   * Легкость добавления новых типов текста, уровней сложности и тренировочных режимов.
   * Возможность интеграции с мобильными версиями.
___________

C:\Users\Administrator\AppData\Local\Packages\com.companyname.fastreading_9zz4h110yvjzm\LocalState
__________________

